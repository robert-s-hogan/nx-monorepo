@import url('https://fonts.googleapis.com/css2?family=Cinzel+Decorative:wght@400;700&family=Metamorphous&display=swap');

@tailwind components;
@tailwind base;
@tailwind utilities;

/* theme colors can be found in /styles/themes.ts */

/* :root variables that do not change with theme */
:root {
  --loader-size: 1rem;
  --loader-border: 0.125rem;
  --border-width: 0.063rem;
  --transition-speed: 0.3s;
  --animation-speed: 1s;
  --hover-scale: 1.05;
  --text-underline-offset: 0.25rem;
  --box-shadow: 0 0 0 0.188rem rgba(66, 153, 225, 0.5);
}

@layer base {
  html,
  .text-golos {
    font-family: 'Metamorphous', cursive;
    font-size: 1.25rem;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  .text-silkscreen {
    font-family: 'Cinzel Decorative', cursive;
    color: var(--text-color);
    text-decoration: uppercase;
  }

  h1 {
    @apply text-5xl md:text-6xl text-center pb-10;
  }

  h2 {
    @apply text-3xl md:text-5xl pb-8;
  }

  h3 {
    @apply text-2xl;
  }

  h4 {
    @apply text-xl;
  }

  h5,
  span {
    @apply text-lg;
  }

  h6 {
    @apply text-base;
  }
  a p {
    color: var(--text-color);
  }
  button {
    @apply px-3 py-2 transition-all duration-300;
    outline: none;
  }
  img,
  button,
  .input,
  .card {
    @apply rounded;
  }
}

@layer components {
  .full-width-section {
    @apply max-w-full py-8 px-4 mx-auto;
  }

  .btn-primary,
  .btn-secondary {
    @apply px-3 py-2;
  }

  .card {
    @apply bg-gray-200 shadow-lg p-6;
  }

  .card-body {
    @apply flex flex-col space-y-6;
  }

  .card-title {
    @apply text-2xl font-semibold;
  }

  .card-text {
    @apply text-lg font-light;
  }

  .sub-title {
    @apply text-lg lg:text-xl;
  }

  .input {
    @apply px-3 py-2;
  }
}
html,
body {
  background: var(--bg-color);
}

body {
  color: var(--text-color);
  transition: background-color 0.5s, color 0.5s;
  padding-top: env(safe-area-inset-top);
  padding-bottom: env(safe-area-inset-bottom);
  padding-left: env(safe-area-inset-left);
  padding-right: env(safe-area-inset-right);
}

/* LINKS */
a {
  position: relative;
  text-decoration: none;
  color: var(--accent-color);
}
/* 
a:before {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 100%;
  border-bottom: 1px solid var(--primary-color);
  transition: right var(--transition-speed) ease;
  text-underline-offset: var(--text-underline-offset);
}

a:hover:before {
  right: 0;
}

a:hover {
  opacity: 0.9;
} */

.no-underline-on-hover:hover:before {
  display: none;
}

/* ICONS */
svg {
  stroke: var(--primary-icon-color);
}

/* DEBUG STYLING */
pre {
  background-color: var(--surface-color);
  border-radius: 1rem;
  padding: 1rem;
  overflow-x: auto;
}

code {
  color: var(--text-secondary);
  font-family: monospace;
}

/* FORM ELEMENTS */
input {
  border-color: var(--border-color);
  border-width: var(--border-width);
}

select {
  border-color: var(--border-color);
  border-width: var(--border-width);
  background-color: var(--surface-color);
  color: var(--text-color);
  padding: 0.5rem;
}

/* BUTTON & BUTTON STATE CLASSES */
a button {
  text-decoration: none;
}
.button-link:hover:before {
  right: 100%;
}

.btn-primary {
  background-color: var(--primary-color);
  color: var(--text-on-primary-color);
}

.btn-primary:hover {
  background-color: var(--hover-color);
}

.btn-primary:active {
  background-color: var(--active-color);
}

.btn-primary:focus {
  outline: none;
  box-shadow: var(--box-shadow);
}

.disabled,
.btn-primary:disabled {
  background-color: var(--disabled-color);
  cursor: not-allowed;
}

.btn-secondary {
  background-color: var(--secondary-color);
  color: var(--text-on-primary-color);
}

.btn-secondary:hover {
  background-color: var(--hover-secondary-color);
}

.btn-secondary:active {
  background-color: var(--active-secondary-color);
}

.btn-secondary:focus {
  outline: none;
  box-shadow: var(--box-shadow);
}

.btn-secondary:disabled {
  background-color: var(--disabled-secondary-color);
  cursor: not-allowed;
}

/* TYPOGRAPHY CLASSES */
.text-on-primary {
  color: var(--text-on-primary-color);
}
.text-on-secondary {
  color: var(--text-on-secondary-color);
}
.text-github {
  color: var(--github-icon-color);
}

/* BACKGROUND CLASSES */
.bg-image-overlay {
  background-color: var(--bg-opacity-color);
  transition: background-color 0.3s;
}
@media (min-width: 1024px) {
  .image-overlay:hover {
    background-color: transparent;
  }
}
.bg-opposite-theming {
  background-color: var(--text-color);
}

/* DARK LIGHT STYLES */
.moon,
.sun {
  transition: opacity 0.3s, transform 0.3s;
}
.sun {
  color: var(--sun-icon-color);
}
.moon {
  color: var(--moon-icon-color);
}
.moon.fade-out,
.sun.fade-out {
  opacity: 0;
  transform: scale(0.9); /* Slight shrink */
}

.icon-white svg {
  stroke: #ffffff;
}
.nav-logo {
  transition: opacity 0.3s;
}
@keyframes smoothBounce {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-5px);
  }
}

@keyframes franticBounce {
  0%,
  100% {
    transform: translateY(0);
  }
  25%,
  75% {
    transform: translateY(-15px);
  }
  50% {
    transform: translateY(0px);
  }
}

.light-bounce {
  animation: smoothBounce 1.5s cubic-bezier(0.25, 1, 0.5, 1) infinite;
}

.dark-bounce {
  animation: franticBounce 0.5s linear infinite;
}

.fade-in-out {
  transition: opacity 1s ease-in-out;
}

.hidden-icon {
  opacity: 0;
}

.visible-icon {
  opacity: 1;
}

@keyframes colorShift {
  0% {
    background: var(--start-gradient-color);
  }
  50% {
    background: var(--mid-gradient-color);
  }
  100% {
    background: var(--end-gradient-color);
  }
}

.color-shift-bg {
  animation: colorShift 10s linear infinite;
}

@keyframes bgPulse {
  0%,
  100% {
    background-color: var(--bg-color);
  }
  50% {
    background-color: var(--bg-alt-color);
  }
}

.pulse-bg {
  animation: bgPulse 1.5s ease-in-out infinite;
}
.punch {
  animation: punch 0.5s forwards;
}

@keyframes punch {
  0% {
    transform: rotate(90deg) translateY(0);
  }
  20% {
    transform: rotate(90deg) translateY(-400px); /* Note the change here */
  }
  80% {
    transform: rotate(90deg) translateY(-400px); /* And here */
  }
  100% {
    transform: rotate(90deg) translateY(0);
  }
}
